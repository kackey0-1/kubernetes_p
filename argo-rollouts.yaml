apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-04-06T09:48:13Z"
    generateName: argo-rollouts-6f6b9bd669-
    labels:
      app.kubernetes.io/name: argo-rollouts
      pod-template-hash: 6f6b9bd669
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fea0674d-dd4d-428a-aaa3-ac67f8367e01"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"argo-rollouts"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-04-06T09:48:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-04-06T23:00:50Z"
    name: argo-rollouts-6f6b9bd669-rgbms
    namespace: argo-rollouts
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argo-rollouts-6f6b9bd669
      uid: fea0674d-dd4d-428a-aaa3-ac67f8367e01
    resourceVersion: "45071"
    uid: 39950a97-613f-4883-823a-3001c583f3ea
  spec:
    containers:
    - image: argoproj/argo-rollouts:v0.10.2
      imagePullPolicy: Always
      name: argo-rollouts
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argo-rollouts-token-bptqz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: argo-rollouts
    serviceAccountName: argo-rollouts
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argo-rollouts-token-bptqz
      secret:
        defaultMode: 420
        secretName: argo-rollouts-token-bptqz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-04-06T09:48:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-04-06T23:00:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-04-06T23:00:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-04-06T09:48:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ecab5839be99d97b080b48069e41ba1a506daaf734a207a62673b8a29cd46ea7
      image: argoproj/argo-rollouts:v0.10.2
      imageID: docker-pullable://argoproj/argo-rollouts@sha256:e2b25a5f0726b02b190e8dc6e0ea44b1131f0ffbedaccd1570d49729c38c4af2
      lastState:
        terminated:
          containerID: docker://dcc27c59077df5c5477e315fb9ff760ad48036eed5d7c2aa7174eeaf20c08d3c
          exitCode: 0
          finishedAt: "2021-04-06T23:00:10Z"
          reason: Completed
          startedAt: "2021-04-06T09:48:20Z"
      name: argo-rollouts
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-04-06T23:00:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.4
    podIPs:
    - ip: 172.17.0.4
    qosClass: BestEffort
    startTime: "2021-04-06T09:48:13Z"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rollouts-controller","app.kubernetes.io/name":"argo-rollouts","app.kubernetes.io/part-of":"argo-rollouts"},"name":"argo-rollouts","namespace":"argo-rollouts"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argo-rollouts"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argo-rollouts"}},"spec":{"containers":[{"image":"argoproj/argo-rollouts:v0.10.2","imagePullPolicy":"Always","name":"argo-rollouts"}],"securityContext":{"runAsNonRoot":true},"serviceAccountName":"argo-rollouts"}}}}
    creationTimestamp: "2021-04-06T09:48:13Z"
    generation: 1
    labels:
      app.kubernetes.io/component: rollouts-controller
      app.kubernetes.io/name: argo-rollouts
      app.kubernetes.io/part-of: argo-rollouts
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/name: {}
            f:spec:
              f:containers:
                k:{"name":"argo-rollouts"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-04-06T09:48:13Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-04-06T09:48:20Z"
    name: argo-rollouts
    namespace: argo-rollouts
    resourceVersion: "614"
    uid: c2ca6907-b5e3-4e4c-a928-8292e495377a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argo-rollouts
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argo-rollouts
      spec:
        containers:
        - image: argoproj/argo-rollouts:v0.10.2
          imagePullPolicy: Always
          name: argo-rollouts
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: argo-rollouts
        serviceAccountName: argo-rollouts
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-04-06T09:48:20Z"
      lastUpdateTime: "2021-04-06T09:48:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-04-06T09:48:13Z"
      lastUpdateTime: "2021-04-06T09:48:20Z"
      message: ReplicaSet "argo-rollouts-6f6b9bd669" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argo-rollouts-metrics","app.kubernetes.io/part-of":"argo-rollouts"},"name":"argo-rollouts-metrics","namespace":"argo-rollouts"},"spec":{"ports":[{"name":"metrics","port":8090,"protocol":"TCP","targetPort":8090}],"selector":{"app.kubernetes.io/name":"argo-rollouts"}}}
    creationTimestamp: "2021-04-06T09:48:13Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argo-rollouts-metrics
      app.kubernetes.io/part-of: argo-rollouts
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8090,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app.kubernetes.io/name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-04-06T09:48:13Z"
    name: argo-rollouts-metrics
    namespace: argo-rollouts
    resourceVersion: "571"
    uid: e168614b-1cfc-421f-a9e4-ee5900215264
  spec:
    clusterIP: 10.101.183.215
    clusterIPs:
    - 10.101.183.215
    ports:
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: 8090
    selector:
      app.kubernetes.io/name: argo-rollouts
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
